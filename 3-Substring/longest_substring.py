def lengthOfLongestSubstring(s: str) -> int:
    # ایجاد یک مجموعه برای ذخیره کاراکترهای منحصر به فرد
    _set = set()
    
    # ایجاد دو اشاره‌گر i و j برای نشان‌دادن شروع و پایان پنجره
    i = j = 0
    
    # محاسبه طول رشته و مقدار اولیه برای _max
    length, _max = (0, 0) if len(s) == 0 else (len(s), 0)
    
    # حلقه تا زمانی که j به انتهای رشته نرسیده باشد
    while j < length:
        # اگر کاراکتر s[j] در مجموعه وجود نداشته باشد
        if s[j] not in _set:
            # کاراکتر را به مجموعه اضافه می‌کنیم
            _set.add(s[j])
            
            # اگر طول زیررشته فعلی از _max بیشتر باشد، _max را به‌روزرسانی می‌کنیم
            if _max <= j - i:
                _max = j - i + 1
            
            # حرکت به کاراکتر بعدی
            j += 1
        else:
            # اگر کاراکتر s[j] در مجموعه وجود داشته باشد، کاراکتر s[i] را از مجموعه حذف می‌کنیم
            _set.remove(s[i])
            
            # حرکت به کاراکتر بعدی در شروع پنجره
            i += 1
    
    # برگرداندن طول طولانی‌ترین زیررشته بدون تکرار
    return _max