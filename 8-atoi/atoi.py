'''
    سوال به این  صورت است که میخواهد یک سری عملیات رو پشت سر هم جلو ببریم 
    کل الگوریتم به ما گفته شده و مراحل را گفته و ما باید پیاده سازی کنیم 
    یک استریگ را تبدیل میکند به یک اینتیجر ۳۲ بیتی علامت دار 
    
'''

def myAtoi(s):
    
    '''
        رشته خالی بود صفر برمیگردانیم 
        یک : فاصله های اضافه را حذف میکنیم 
        دو : علامت را در جایی ذخیره میکنیم و در أخر اضافه میکنیم 
        کلمپ میکنیم اگر در رنج۳۲  بیتی نبود ما باید ببینیم به کدام طرف نزدیک بود اون رو نمایش دهیم 
              
             
    '''
    
    s = s.lstrip()
    length = len(s)
    if not length:
        return 0 
    sign = 1 # تعیین علامت عدد
    i = 0
    
    # بررسی علامت + یا -
    if s[i] == '+':
        i += 1
    elif s[i] == '-':
        sign = -1
        i += 1

    result = 0
    # حلقه برای تبدیل کاراکترهای عددی به عدد
    while i < length:
        cur = s[i]
        if not cur.isdigit():  # شاید استریگ ما عدد نداشته باشد و حروف باشد 
            break
        else:
            result = result * 10 + int(cur) # اضافه کردن رقم به نتیجه
        i += 1
    

    result *= sign # اعمال علامت به نتیجه
    INT_MIN = -2**31
    INT_MAX = 2**31 - 1
    
    # بررسی محدوده مجاز
    if result < INT_MIN:
        return INT_MIN
    elif result > INT_MAX:
        return INT_MAX

    return result

s = myAtoi("21474836460")
print (s)       
                